name: Node.js Build
'on':
  workflow_dispatch: {}
  push: {}
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'
      - uses: actions/setup-node@v3
        with:
          node-version: lts/*
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.15
        with:
          versionSpec: 5.x
      - id: determine_version
        name: Determine Version
        uses: gittools/actions/gitversion/execute@v0.9.15
        with:
          additionalArguments: /overrideconfig mode=Mainline
      - name: Install Dependencies
        run: npm ci
        shell: bash
      # - name: List Dependencies
      #   run: npm list --all > dependencies.txt
      #   shell: bash
      # - name: Collect Dependencies
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: Dependencies
      #     path: dependencies.txt
      # - name: List Dependency Updates
      #   run: npm outdated > dependencyUpdates.txt
      #   shell: bash
      # - name: Collect Dependency Updates
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: Dependencies Updates
      #     path: dependencyUpdates.txt
      - name: Test
        run: npm test
        shell: bash
      - name: Collect Test Results
        uses: actions/upload-artifact@v3
        with:
          name: Test Results
          path: test-report.html
      - name: Build
        run: |-
          # package.json does not define a build script, so the build command is commented out.
          # npm run build
        shell: bash
      - name: Package
        run: |-
          SOURCEPATH=.
          OUTPUTPATH=.
          # If there is a build directory, assume that is what we want to package
          if [[ -d "build" ]]; then
            SOURCEPATH=build
          fi
          zip -r ${OUTPUTPATH}/CopilotDemo.${{ steps.determine_version.outputs.semVer }}.zip \
            ${SOURCEPATH} \
             -x node_modules\* \
             -i \
             '*.html' \
             '*.htm' \
             '*.css' \
             '*.js' \
             '*.min' \
             '*.map' \
             '*.sql' \
             '*.png' \
             '*.jpg' \
             '*.jpeg' \
             '*.gif' \
             '*.json' \
             '*.env' \
             '*.txt' \
             '*.Procfile'
        shell: bash
      - name: Tag Release
        uses: mathieudutour/github-tag-action@v6.1
        with:
          custom_tag: ${{ steps.determine_version.outputs.semVer }}+run${{ github.run_number }}-attempt${{ github.run_attempt }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - id: create_release
        name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.determine_version.outputs.semVer }}+run${{ github.run_number }}-attempt${{ github.run_attempt }}
          release_name: Release ${{ steps.determine_version.outputs.semVer }} Run ${{ github.run_number }} Attempt ${{ github.run_attempt }}
          draft: ${{ github.ref == 'refs/heads/main' && 'false' || 'true' }}
          name: ${{ steps.determine_version.outputs.semVer }}+run${{ github.run_number }}-attempt${{ github.run_attempt }}
      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.determine_version.outputs.semVer }}+run${{ github.run_number }}-attempt${{ github.run_attempt }}
          files: CopilotDemo.${{ steps.determine_version.outputs.semVer }}.zip
      - name: Push packages to Octopus Deploy
        uses: OctopusDeploy/push-package-action@v3
        env:
          OCTOPUS_API_KEY: ${{ secrets.OCTOPUS_API_TOKEN }}
          OCTOPUS_URL: ${{ secrets.OCTOPUS_SERVER_URL }}
          OCTOPUS_SPACE: ${{ secrets.OCTOPUS_SPACE }}
        with:
          packages: CopilotDemo.${{ steps.determine_version.outputs.semVer }}.zip
          overwrite_mode: OverwriteExisting
      
      # Build information links the commits and issues
      # as part of this build to the package deployed
      # by Octopus.      
      - name: Generate Octopus Deploy build information
        uses: OctopusDeploy/push-build-information-action@v3
        env:
          OCTOPUS_API_KEY: ${{ secrets.OCTOPUS_API_TOKEN }}
          OCTOPUS_URL: ${{ secrets.OCTOPUS_SERVER_URL }}
          OCTOPUS_SPACE: ${{ secrets.OCTOPUS_SPACE }}
        with:
          version: ${{ steps.determine_version.outputs.semVer }}
          packages: CopilotDemo
          overwrite_mode: OverwriteExisting
      
      # This is the handover from GitHub Actions to 
      # Octopus. The release is created and automatically
      # deployed to the Development environment.
      - name: Create Octopus Release
        uses: OctopusDeploy/create-release-action@v3
        env:
          OCTOPUS_API_KEY: ${{ secrets.OCTOPUS_API_TOKEN }}
          OCTOPUS_URL: ${{ secrets.OCTOPUS_SERVER_URL }}
          OCTOPUS_SPACE: ${{ secrets.OCTOPUS_SPACE }}
        with:
          project: Audits
          packages: CopilotDemo:${{ steps.determine_version.outputs.semVer }}

permissions:
  id-token: write
  checks: write
  contents: write
